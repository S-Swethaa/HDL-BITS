module top_module(
    input clk,
    input areset,
    input train_valid,
    input train_taken,
    output [1:0] state
);
    reg [1:0]st,nextstate;
    parameter [1:0]SNT=2'b00,WNT=2'b01,WT=2'b10,ST=2'b11;
    always @(posedge clk or posedge areset)begin
        if(areset)begin
           st<=WNT;
        end  else
           st<=train_valid?nextstate:st;
        end
    
    always @(*)begin
        case(state)
            2'b00:nextstate=train_taken?WNT:SNT;
            2'b01:nextstate=train_taken?WT:SNT;
            2'b10:nextstate=train_taken?ST:WNT;
            2'b11:nextstate=train_taken?ST:WT;
            default:nextstate=WNT;
        endcase
    end
    
    assign state=st;

endmodule
